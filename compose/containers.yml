services:
  filebrowser:
    container_name: filebrowser
    image: hurlenko/filebrowser
    user: "${UID}:${GID}"
    ports:
      - 6565:8080
    volumes:
      - /nas:/data/nas
      - /config:/data/config
      - /config/containers/filebrowser:/config
    environment:
      - FB_BASEURL=/filebrowser
    restart: unless-stopped

  audiobookshelf:
    container_name: audiobookshelf
    image: ghcr.io/advplyr/audiobookshelf:latest
    ports:
      - 13378:80
    volumes:
      - /nas/media/books:/audiobooks
      - /config/containers/audiobookshelf/config:/config
      - /config/containers/audiobookshelf/metadata:/metadata
    restart: unless-stopped

  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /config/containers/duplicati:/config
      - /nas/:/nas/
    ports:
      - 8200:8200
    restart: unless-stopped

  watchtower:
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=$TZ
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400
      # - WATCHTOWER_HTTP_API_TOKEN=watchtowertkn
    image: containrrr/watchtower
    restart: unless-stopped

  archisteamfarm:
    container_name: archisteamfarm
    volumes:
      - /config/containers/asf/config:/app/config
      - /config/containers/asf/logs:/app/logs
    ports:
      - 1242:1242
    image: justarchi/archisteamfarm
    restart: unless-stopped

  grocy:
    image: lscr.io/linuxserver/grocy:latest
    container_name: grocy
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /config/containers/grocy:/config
    ports:
      - 9283:80
    restart: unless-stopped

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
      PUID: $PUID
      PGID: $PGID
    ports:
      - 3000:3000
    volumes:
      - /config/containers/homepage:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations
      - /nas:/nas
    restart: unless-stopped

  qdirstat:
    container_name: qdirstat
    image: jlesage/qdirstat
    ports:
      - "5800:5800"
    volumes:
      - /config/containers/qdirstat:/config
      - /nas/:/nas
    restart: unless-stopped

  beets:
    image: lscr.io/linuxserver/beets:latest
    container_name: beets
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /config/containers/beets:/config
      - /nas/media/music:/music
    ports:
      - 8337:8337
    restart: unless-stopped

  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /config/containers/nextcloud/config:/config
      - /config/containers/nextcloud/data:/data
    ports:
      - 9191:443
    restart: unless-stopped

  stirling-pdf:
    image: frooodle/s-pdf:latest
    container_name: stirling-pdf
    ports:
      - '6161:8080'
    volumes:
      - /config/containers/stirling-pdf/tessdata:/usr/share/tessdata # Required for extra OCR languages
      - /config/containers/stirling-pdf/config:/configs
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=false
      - LANGS=en_GB
    restart: unless-stopped

  freshrss:
    image: freshrss/freshrss:edge
    # Optional build section if you want to build the image locally:
    build:
      # Pick #latest (stable release) or #edge (rolling release) or a specific release like #1.21.0
      context: https://github.com/FreshRSS/FreshRSS.git#edge
      dockerfile: Docker/Dockerfile-Alpine
    container_name: freshrss
    restart: unless-stopped
    logging:
      options:
        max-size: 10m
    volumes:
      # Recommended volume for FreshRSS persistent data such as configuration and SQLite databases
      - /config/containers/freshrss/data:/var/www/FreshRSS/data
      # Optional volume for storing third-party extensions
      - /config/containers/freshrss/extensions:/var/www/FreshRSS/extensions
    ports:
      # If you want to open a port 8080 on the local machine:
      - "8089:80"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      # A timezone http://php.net/timezones (default is UTC)
      TZ: ${TZ}
      # Cron job to refresh feeds at specified minutes
      CRON_MIN: '2,32'
      # 'development' for additional logs; default is 'production'
      FRESHRSS_ENV: development
      # Optional advanced parameter controlling the internal Apache listening port
      LISTEN: 0.0.0.0:80
      # Optional parameter, remove for automatic settings, set to 0 to disable,
      # or (if you use a proxy) to a space-separated list of trusted IP ranges
      TRUSTED_PROXY: 172.16.0.1/12 192.168.0.1/16
      # Optional parameter, set to 1 to enable OpenID Connect (only available in our Debian image)
      OIDC_ENABLED: 0
      # Optional auto-install parameters (the Web interface install is recommended instead):
      FRESHRSS_INSTALL: |-
        --api-enabled
        --base-url ${BASE_URL}
        --db-base ${DB_BASE}
        --db-host ${DB_HOST}
        --db-password ${DB_PASSWORD}
        --db-type pgsql
        --db-user ${DB_USER}
        --default_user admin
        --language en
      FRESHRSS_USER: |-
        --api-password ${ADMIN_API_PASSWORD}
        --email ${ADMIN_EMAIL}
        --language en
        --password ${ADMIN_PASSWORD}
        --user admin
